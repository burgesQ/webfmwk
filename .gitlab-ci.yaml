workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG

image: docker.frafos.net/go-ci:1.19

stages:
  - test
  - lint
  - release

.go-cache:
  variables:
    GOPATH: /tmp/.go
  before_script:
    - mkdir -p /tmp/.go
  cache:
    paths:
      - /tmp/.go/pkg/mod/

linting:
  stage: lint
  needs: []
  allow_failure: true
  artifacts:
    when: always
    paths:
      - qc.json
    reports:
      codequality: qc.json
  script:
    - make lint LINT_ARGS='--max-same-issues 50 --out-format code-climate' \
      | tee qc.json \
      | jq -r '.[] | "\(.location.path):\(.location.lines.begin) \(.description)"'

unit testing:
  stage: test
  needs: []
  extends: .go-cache
  script:
    - make test-cover-re
    - cat out.txt | go-junit-report > report.xml
    - gocover-cobertura < cover.cov > cover.xml
  coverage: /\(statements\)(?:\s+)?(\d+(?:\.\d+)?%)/
  artifacts:
    when: always
    paths:
      - report.xml
      - cover.xml
      - cover.html
    reports:
      junit: report.xml
      # cobertura: cover.xml
      coverage_report:
        coverage_format: cobertura
        path: cover.xml

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG                 # Run this job when a tag is created
  script:
    - echo "running release_job"
  release:                               # See https://docs.gitlab.com/ee/ci/yaml/#release for available properties
    tag_name: '$CI_COMMIT_TAG'
    description: "webfmwk' release '$CI_COMMIT_TAG'"
