linters-settings:
  depguard:
    list-type: blacklist
    packages:
      # logging is allowed only by gommon/golib/v2/log
      - github.com/sirupsen/logrus
      - log
      - gommon/golib/log
      - fmt
    packages-with-error-message:
      - log: "logging is allowed only by golib/v2/log"
      - github.com/sirupsen/logrus: "logging is allowed only by golib/v2/log"
      - gommon/golib/log: "logging is allowed only by golib/v2/log"
  dupl:
    threshold: 100
  funlen:
    lines: 100
    statements: 50
  gci:
    local-prefixes: github.com/golangci/golangci-lint
  goconst:
    min-len: 2
    min-occurrences: 2
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
      # - ifElseChain
      # - octalLiteral
      # - wrapperFunc
    disabled-checks:
      - dupImport # https://github.com/go-critic/go-critic/issues/845
      - whyNoLint
      - ioutilDeprecated
  gocyclo:
    min-complexity: 15
  goimports:
    local-prefixes: github.com/golangci/golangci-lint
  # golint:
  #   min-confidence: 0
  # see https://github.com/mgechev/revive#available-rules for details.
  revive:
    ignore-generated-header: true
    severity: warning
    # enable-all-rules: true
    rules:
      - name: indent-error-flow
        severity: warning
      - name: add-constant
        severity: warning
        arguments:
          - maxLitCount: "3"
            allowStrs: '""'
            allowInts: "0,1,2"
            # allowFloats: "0.0,0.,1.0,1.,2.0,2."
  gomnd:
    settings:
      mnd:
        # don't include the "operation" and "assign"
        checks: argument,case,condition,return
  govet:
    check-shadowing: true
    enable:
      - fieldalignment
    settings:
      printf:
        funcs:
          - (gitlab.frafos.com/gommon/golib).Infof
          - (gitlab.frafos.com/gommon/golib).Warnf
          - (gitlab.frafos.com/gommon/golib).Errorf
          - (gitlab.frafos.com/gommon/golib).Fatalf

  lll:
    line-length: 140
  maligned:
    suggest-new: true
  misspell:
    locale: US
  nolintlint:
    allow-leading-space: true # don't require machine-readable nolint directives (i.e. with no leading space)
    allow-unused: false # report any unused nolint directives
    require-explanation: false # don't require an explanation for nolint directives
    require-specific: false # don't require nolint directives to be specific about which linter is being skipped

linters:
  # please, do not use `enable-all`: it's deprecated and will be removed soon.
  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint
  disable-all: true
  enable:
    - bodyclose
    # - deadcode
    - depguard
    - dogsled
    - dupl
    - errcheck
    - exportloopref
    - exhaustive
    - funlen
    - gochecknoinits
    - goconst
    - gocritic
    - gocyclo
    - gofmt
    - goimports
    - gomnd
    - goprintffuncname
    - gosec
    - gosimple
    - ineffassign
    - lll
    - misspell
    - nakedret
    - noctx
    - nolintlint
    - rowserrcheck
    - staticcheck
    # - structcheck
    - stylecheck
    - unconvert
    - unparam
    - unused
    # - varcheck
    - whitespace
    - asciicheck
    - gocognit
    - goerr113
    - nestif
    - prealloc
    - revive
    - wsl
    - durationcheck
    - forbidigo
    - wastedassign
    - sqlclosecheck
    - predeclared
    - nilerr
    - makezero
    - ifshort
    - gomoddirectives
    - goheader
    - gci
    - errorlint
    - forcetypeassert
    - nlreturn
    - govet
    - typecheck
    - cyclop
    - godox
    # - godot
    - interfacer ## archived

    # obsolet
    # - golint ## obsolete, pls use revive instead

    # - maligned ## use fieldalignment
    # - scopelint ## exportloopref

    ### don't enable:
    # - gochecknoglobals
    # - testpackage
    # - exhaustivestruct
    # - paralleltest

issues:
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    - path: _test\.go
      linters:
        - funlen
        - gosec
        - gocritic
        - revive
        - stylecheck
        - godox
    # https://github.com/go-critic/go-critic/issues/926
    # - linters:
    #     - gocritic
    #   text: "unnecessaryDefer:"

# run:
#   skip-dirs:
#     - test/testdata_etc
